@model MovieProject.Models.CheckOutVM

@{
    ViewBag.Title = "Check Out";
}

@using (Html.BeginForm("CheckOut", "Cart", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.Customer.Id)

    <div class="form-horizontal">
        <h4>Fill in the form</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Customer.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Customer.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Customer.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Customer.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Customer.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Customer.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Customer.EmailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Customer.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Customer.EmailAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Customer.PhoneNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Customer.PhoneNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Customer.PhoneNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Customer.BillingAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Customer.BillingAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Customer.BillingAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Customer.BillingCity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Customer.BillingCity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Customer.BillingCity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Customer.BillingZip, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Customer.BillingZip, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Customer.BillingZip, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-check">
            <label class="form-check-label">
                <input id="delivery" class="form-check-input" type="checkbox" value="" checked="checked">
                Deliver to the billing address
            </label>
        </div>

        <div id="hiddenDelivery" style="display:none">
            <div class="form-group">
                @Html.LabelFor(model => model.Customer.DeliveryAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Customer.DeliveryAddress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Customer.DeliveryAddress, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Customer.DeliveryCity, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Customer.DeliveryCity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Customer.DeliveryCity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Customer.DeliveryZip, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Customer.DeliveryZip, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Customer.DeliveryZip, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <table class="table table-hover">
            <tr>
                <th>
                    Title
                </th>
                <th>
                    Year
                </th>
                <th>
                    Price
                </th>
            </tr>

            @foreach (var item in Model.ShoppingCart)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(ModelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(ModelItem => item.ReleaseYear)
                    </td>
                    <td>
                        @Html.DisplayFor(ModelItem => item.Price)
                    </td>
                </tr>
            }
        </table>

        @for (int i = 0; i < Model.ShoppingCart.Count; i++)
        {
            @Html.HiddenFor(model => Model.ShoppingCart[i].Id)
            @Html.HiddenFor(model => Model.ShoppingCart[i].Director)
            @Html.HiddenFor(model => Model.ShoppingCart[i].Title)
            @Html.HiddenFor(model => Model.ShoppingCart[i].ReleaseYear)
            @Html.HiddenFor(model => Model.ShoppingCart[i].Price)
            @Html.HiddenFor(model => Model.ShoppingCart[i].Url)
        }

        @Html.HiddenFor(item => item.TotalCost)

        <h3>Total: @Html.DisplayFor(item => item.TotalCost) Kr</h3>

        <hr />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Order" class="btn btn-default" />
            </div>
        </div>
    </div>
}

